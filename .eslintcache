[{"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\index.js":"1","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\App.js":"2","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\router\\PublicRouter.js":"3","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\slider\\index.js":"4","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\HeaderCustomer\\HeaderCustomer.js":"5","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\containers\\Inventory.jsx":"6","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\containers\\AreaTables.jsx":"7","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\UploadImage.jsx":"8","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\Types.jsx":"9","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\Imports.jsx":"10","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\Areas.jsx":"11","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\promotion\\components\\PromotionList.jsx":"12","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\IngredientList.jsx":"13","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\actions\\saga\\rootSaga.js":"14","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\test\\login.js":"15","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\DashBoard\\DashBoard.jsx":"16","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\Products.jsx":"17","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\Tables.jsx":"18","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\TypeList.jsx":"19","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\AreaList.jsx":"20","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\reducer\\index.js":"21","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\Footer\\index.js":"22","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\ProductTypes.jsx":"23","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\util\\callerApi.js":"24","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\TableList.jsx":"25","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\ProductList.jsx":"26","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\router\\PrivateRouter.js":"27","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\ManagerStaff\\Staffs.jsx":"28","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\Ingredients.jsx":"29","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\ManagerStaff\\StaffList.jsx":"30"},{"size":922,"mtime":1606151130399,"results":"31","hashOfConfig":"32"},{"size":2262,"mtime":1606038134959,"results":"33","hashOfConfig":"32"},{"size":540,"mtime":1604146842517,"results":"34","hashOfConfig":"32"},{"size":2288,"mtime":1605539780105,"results":"35","hashOfConfig":"32"},{"size":2654,"mtime":1606163755973,"results":"36","hashOfConfig":"32"},{"size":873,"mtime":1605038423209,"results":"37","hashOfConfig":"32"},{"size":856,"mtime":1605121366975,"results":"38","hashOfConfig":"32"},{"size":1111,"mtime":1604325919708,"results":"39","hashOfConfig":"32"},{"size":2955,"mtime":1605583541732,"results":"40","hashOfConfig":"32"},{"size":4102,"mtime":1605105631215,"results":"41","hashOfConfig":"32"},{"size":2744,"mtime":1605539034204,"results":"42","hashOfConfig":"32"},{"size":6059,"mtime":1605638939599,"results":"43","hashOfConfig":"32"},{"size":7779,"mtime":1604904726312,"results":"44","hashOfConfig":"32"},{"size":99,"mtime":1593404719000,"results":"45","hashOfConfig":"32"},{"size":3007,"mtime":1604684425733,"results":"46","hashOfConfig":"32"},{"size":606,"mtime":1605204057635,"results":"47","hashOfConfig":"32"},{"size":5421,"mtime":1606203975216,"results":"48","hashOfConfig":"32"},{"size":4248,"mtime":1605123160920,"results":"49","hashOfConfig":"32"},{"size":5595,"mtime":1605648968490,"results":"50","hashOfConfig":"32"},{"size":4699,"mtime":1605106469539,"results":"51","hashOfConfig":"32"},{"size":102,"mtime":1593404719000,"results":"52","hashOfConfig":"32"},{"size":10649,"mtime":1604223253198,"results":"53","hashOfConfig":"32"},{"size":872,"mtime":1605530907744,"results":"54","hashOfConfig":"32"},{"size":280,"mtime":1605538506757,"results":"55","hashOfConfig":"32"},{"size":7868,"mtime":1605152011881,"results":"56","hashOfConfig":"32"},{"size":10652,"mtime":1606234826356,"results":"57","hashOfConfig":"32"},{"size":491,"mtime":1604146754872,"results":"58","hashOfConfig":"32"},{"size":5702,"mtime":1605635047820,"results":"59","hashOfConfig":"32"},{"size":4090,"mtime":1605517982680,"results":"60","hashOfConfig":"32"},{"size":4756,"mtime":1606235278383,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"h64l9o",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\index.js",[],["134","135"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\App.js",["136","137"],"import React from \"react\";\nimport \"./App.css\";\nimport HeaderLayout from \"./components/Header/index\";\nimport SiderLayout from \"./components/slider/index\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport Staffs from \"./layout/admin/ManagerStaff/Staffs\";\nimport PublicRoute from \"./router/PublicRouter\";\nimport {PrivateRoute} from \"./router/PrivateRouter\";\nimport Footer from \"./components/Footer/index\";\nimport Login from \"./layout/test/login\";\nimport Inventory from \"./layout/inventory/containers/Inventory\";\nimport UploadImage from \"./layout/product/components/UploadImage\";\nimport ProductTypes from \"./layout/product/containers/ProductTypes\";\nimport AreaTables from \"./layout/areas/containers/AreaTables\";\nimport PromotionDetails from \"./layout/promotion/containers/PromotionDetails\";\nimport DashBoard from \"./layout/admin/DashBoard/DashBoard\";\nimport CustomerHeader from \"./components/HeaderCustomer/HeaderCustomer\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute restricted={true} component={Login} path=\"/login\" exact />\n          {/*customer*/}\n          <Route exact path=\"/\">\n            <div className = \"super_container\">\n              <CustomerHeader/>\n              {/* <Footer/> */}\n            </div>\n          </Route>\n\n        {/*admin*/}\n        <Route path=\"/admin\">\n          <Layout>\n            <SiderLayout />\n            <Layout className=\"site-layout\">\n              <HeaderLayout />\n              <Switch>\n                <PrivateRoute exact path=\"/admin/home\" component={Staffs} />\n                <PrivateRoute exact path=\"/admin/upload\" component={UploadImage} />\n                <PrivateRoute exact path=\"/admin/product\" component={ProductTypes} />\n                <PrivateRoute exact path=\"/admin/inventory\" component={Inventory} />\n                <PrivateRoute exact path=\"/admin/area\" component={AreaTables} />\n                <PrivateRoute exact path=\"/admin/promotion\" component={PromotionDetails} />\n                <PrivateRoute exact path=\"/admin/dashboard\" component={DashBoard} />\n              </Switch>\n            </Layout>\n          </Layout>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\router\\PublicRouter.js",[],["138","139"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\slider\\index.js",["140","141","142","143"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Layout, Menu, Anchor } from \"antd\";\nimport \"./index\";\nimport { Image } from \"antd\";\nimport {\n  UserOutlined,\n  ShoppingOutlined,\n  PlusSquareOutlined,\n  CalculatorOutlined,\n  DashboardOutlined,\n  AreaChartOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.scss\";\nimport { Link, useLocation } from \"react-router-dom\";\nconst { Sider } = Layout;\nconst height = window.innerHeight;\nconst SiderLayout = (props) => {\n  const location = useLocation();\n  return (\n    <Anchor>\n      <Sider\n        style={{\n          height: \"100vh\",\n          background: \"#001529\",\n        }}\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        onBreakpoint={(broken) => {\n          console.log(broken);\n        }}\n        onCollapse={(collapsed, type) => {\n          console.log(collapsed, type);\n        }}\n      >\n        <div className=\"logo\">\n          <img\n            width=\"100%\"\n            src=\"https://kinhdoanhcafe.com/wp-content/uploads/2013/04/thiet-ke-logo-cho-quan-ca-phe-600x600.png\"\n          />\n        </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[location.pathname]}\n        >\n          <Menu.Item key=\"/admin/home\" icon={<UserOutlined />}>\n            <Link to=\"/admin/home\">Quản lý nhân viên</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/product\" icon={<ShoppingOutlined />}>\n            <Link to=\"/admin/product\">Quản lý sản phẩm</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/inventory\" icon={<CalculatorOutlined />}>\n            <Link to=\"/admin/inventory\">Quản lý kho</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/area\" icon={<AreaChartOutlined />}>\n            <Link to=\"/admin/area\">Quản lý khu vực</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/promotion\" icon={<PlusSquareOutlined />}>\n            <Link to=\"/admin/promotion\">Quản lý khuyến mãi</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n            <Link to=\"/admin/dashboard\">Thống kê</Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    </Anchor>\n  );\n};\n\nSiderLayout.propTypes = {};\n\nexport default SiderLayout;\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\HeaderCustomer\\HeaderCustomer.js",["144","145","146"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\containers\\Inventory.jsx",["147"],"import React from \"react\";\r\nimport { Tabs, Col, Row, Button } from 'antd';\r\nimport Ingredients from \"../components/Ingredients\";\r\nimport Imports from \"../components/Imports\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst Inventory = () => {\r\n  const callback = (key) =>{\r\n    console.log(key);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Row style={{ marginLeft: \"400px\" , marginRight: \"20px\", marginTop: \"100px\", marginBottom:\"20px\"}}>\r\n    <Col md={12}>\r\n      <label style={{fontWeight: \"bold\", color: \"blue\", fontSize: \"20px\"}}>QUẢN LÝ KHO</label>\r\n    </Col>\r\n  </Row>\r\n  <Tabs onChange={callback} type=\"card\">\r\n    <TabPane tab=\"Quản lý nguyên liệu\" key=\"1\">\r\n      <Ingredients/>\r\n    </TabPane>\r\n    <TabPane tab=\"Nhập nguyên liệu\" key=\"2\">\r\n      <Imports/>\r\n    </TabPane>\r\n  </Tabs>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\containers\\AreaTables.jsx",["148"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\UploadImage.jsx",[],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\Types.jsx",["149"],"import {Button, Col, Input, Row, Modal, Form, Select } from \"antd\";\r\nimport React, {useState } from \"react\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport TypeList from \"../components/TypeList\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Types = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const handleOk = (e) => {\r\n    console.log(e);\r\n  };\r\n  let user=JSON.parse(localStorage.getItem('user'));\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n  const onAddType = () => {\r\n    setVisible(true);\r\n  };\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const onFinish = (values) => {\r\n    callApi(\r\n      \"post\",\r\n      `${process.env.REACT_APP_URL_API}/api/type`,\r\n      values,null,user.accessToken).then((res)=>{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Thành công',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      }).then(()=>{\r\n        window.location.reload(false)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'error',\r\n            title: 'Thất bại',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"20px\" , marginRight: \"700px\", marginTop: \"20px\"}}>\r\n        <Col md={12}>\r\n          <label style={{fontWeight: \"bold\", fontSize: \"17px\"}}>DANH MỤC SẢN PHẨM</label>\r\n        </Col>\r\n        <Col md={12} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={onAddType}>\r\n            Thêm danh mục\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ margin: \"20px 20px\" }}>\r\n        <Col md={24}>\r\n            <TypeList/>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"THÊM DANH MỤC\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okButtonProps={{\r\n          form: \"category-editor-form-create-type\",\r\n          key: \"submit\",\r\n          htmlType: \"submit\",\r\n        }}\r\n      >\r\n        <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              id=\"category-editor-form-create-type\"\r\n            >\r\n              <Form.Item\r\n                label=\"Mã loại\"\r\n                name=\"type_code\"\r\n                rules={[{ required: true, message: \"Mời nhập mã loại!\" }]}\r\n              >\r\n                <Input/>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên loại\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Mời nhập tên loại!\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Types;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\Imports.jsx",["150","151"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\Areas.jsx",["152"],"import {Button, Col, Input, Row, Modal, Form, Select } from \"antd\";\r\nimport React, {useState } from \"react\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport AreaList from \"../components/AreaList\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Areas = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const handleOk = (e) => {\r\n    console.log(e);\r\n  };\r\n  let user=JSON.parse(localStorage.getItem('user'));\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n  const onAddArea = () => {\r\n    setVisible(true);\r\n  };\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const onFinish = (values) => {\r\n    callApi(\r\n      \"post\",\r\n      `${process.env.REACT_APP_URL_API}/api/area`,\r\n      values,null,user.accessToken).then((res)=>{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Thành công',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      }).then(()=>{\r\n        window.location.reload(false)\r\n      })\r\n    })\r\n   \r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"20px\" , marginRight: \"700px\", marginTop: \"20px\"}}>\r\n        <Col md={12}>\r\n          <label style={{fontWeight: \"bold\", fontSize: \"17px\"}}>DANH SÁCH KHU VỰC</label>\r\n        </Col>\r\n        <Col md={12} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={onAddArea}>\r\n            Thêm khu vực\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ margin: \"20px 20px\" }}>\r\n        <Col md={24}>\r\n            <AreaList/>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"THÊM KHU VỰC\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okButtonProps={{\r\n          form: \"category-editor-form-create-area\",\r\n          key: \"submit\",\r\n          htmlType: \"submit\",\r\n        }}\r\n      >\r\n        <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              id=\"category-editor-form-create-area\"\r\n            >\r\n              <Form.Item\r\n                label=\"Mã khu vực\"\r\n                name=\"area_code\"\r\n                rules={[{ required: true, message: \"Mời nhập mã khu vực!\" }]}\r\n              >\r\n                <Input/>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên khu vực\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Mời nhập tên khu vực!\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Areas;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\promotion\\components\\PromotionList.jsx",["153","154","155"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\IngredientList.jsx",["156","157","158"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\actions\\saga\\rootSaga.js",[],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\test\\login.js",["159","160","161","162","163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport callApi from \"./../../util/callerApi\";\r\nimport \"./login.css\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Image, Layout } from \"antd\";\r\nimport {Redirect} from \"react-router-dom\";\r\nconst { Footer, Content } = Layout;\r\nconst Login = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {}, []);\r\n  //   const onUpdate=(record)=>{\r\n  //     console.log(record)\r\n  //   }\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n\r\n  const Demo = () => {\r\n    const onFinish = (values) => {\r\n      console.log(\"Success:\", values);\r\n      callApi(\"post\", process.env.REACT_APP_URL_API+\"/api/auth/login\", values, null, \"\")\r\n        .then((res) => {\r\n          //setUsers(res.data);//lưu thhoong tin trên local storege\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          window.location.reload(false)\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    return (\r\n      <Layout className=\"form-signin-custom\" style={{height:\"100vh\",width:\"100%\"}}>\r\n        <Content>\r\n        <Row>\r\n          <Col md={8}></Col>\r\n          <Col md={8} style={{ marginTop: \"30vh\" }}>\r\n            <Form\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              {...layout}\r\n            >\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: \"Mời nhập email!\" },\r\n                  { type: \"email\", message: \"Không đúng định dạng\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Mời nhập mật khẩu!\" },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                <Checkbox>Nhớ mật khẩu</Checkbox>\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Đăng nhập\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Demo />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {};\r\n\r\nexport default Login;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\DashBoard\\DashBoard.jsx",["166"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\Products.jsx",["167"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\Tables.jsx",["168","169"],"import {  Upload, message, Button, Col, Input, Row, Modal, Form, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport TableList from \"./../components/TableList\";\r\nimport Swal from \"sweetalert2\";\r\nconst { Option } = Select;\r\n\r\nconst Tables = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [areas, setAreas]= useState([]);\r\n  const handleOk = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    callApi(\"get\", \"http://localhost:8080/api/area\", null, null, \"\").then(\r\n      (res) => {\r\n        setAreas(res.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n  const onAddTable = () => {\r\n    setVisible(true);\r\n  };\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const onFinish = (values) => {\r\n    callApi(\r\n        \"post\",\r\n        `${process.env.REACT_APP_URL_API}/api/table`,\r\n        null,null).then((res)=>{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Thành công',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      }).then(()=>{\r\n        window.location.reload(false)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'error',\r\n            title: 'Thất bại',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"20px\" , marginRight: \"700px\", marginTop: \"20px\"}}>\r\n        <Col md={12}>\r\n          <label style={{fontWeight: \"bold\", fontSize: \"17px\"}}>DANH SÁCH BÀN</label>\r\n        </Col>\r\n        <Col md={12} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={onAddTable}>\r\n            Thêm bàn\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ margin: \"20px 20px\" }}>\r\n        <Col md={24}>\r\n          <TableList />\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"THÊM BÀN MỚI\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okButtonProps={{\r\n          form: \"category-editor-form-create-table\",\r\n          key: \"submit\",\r\n          htmlType: \"submit\",\r\n        }}\r\n      >\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          id=\"category-editor-form-create-table\"\r\n        >\r\n          <Form.Item\r\n            label=\"Mã bàn\"\r\n            name=\"table_code\"\r\n            rules={[{ required: true, message: \"Mời nhập mã bàn!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Tên bàn\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Mời nhập tên bàn!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Số chỗ\"\r\n            name=\"seat_number\"\r\n            rules={[{ required: true, message: \"Mời nhập số chỗ!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Trạng thái\"\r\n            name=\"status\"\r\n            rules={[{ required: true, message: \"Mời nhập trạng thái!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Khu vực\"\r\n            name=\"areas_area_code\"\r\n            rules={[{ required: true, message: \"Mời chọn khu vực!\" }]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              style={{ width: \"100%\" }}\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {areas.map((area, index) => (\r\n                <Option value={area.area_code} key={index}>\r\n                  {area.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\TypeList.jsx",["170"],"import React, { useEffect, useState } from \"react\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Table,\r\n  message,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n} from \"antd\";\r\n\r\nconst TypeList = () => {\r\n  const [types, setTypes] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [formFilter] = Form.useForm();\r\n  let user=JSON.parse(localStorage.getItem('user'));\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    callApi(\r\n      \"get\",\r\n      `${process.env.REACT_APP_URL_API}/api/type`,null, null,\"\").then(\r\n        (res) => {\r\n      setLoading(false);\r\n      setTypes(res.data);\r\n    });\r\n  }, []);\r\n  const onUpdate = (record) => {\r\n    setVisible(true);\r\n    console.log(record);\r\n    form.setFieldsValue({\r\n      type_code: record.type_code,\r\n      name: record.name,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    //    setVisible(false)\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    callApi(\r\n      \"put\",\r\n      `${process.env.REACT_APP_URL_API}/api/type`,\r\n      values,null,user.accessToken).then((res)=>{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Thành công',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      }).then(()=>{\r\n        window.location.reload(false)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'error',\r\n            title: 'Thất bại',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    let param = {\r\n      type_code: record.type_code,\r\n    };\r\n    Swal.fire({\r\n      title: \"Bạn có chắc muốn xóa không?\",\r\n      text: \"Bạn không thể hoàn tác hành động này!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      if(result.values){\r\n        callApi(\r\n          \"delete\",\r\n          `${process.env.REACT_APP_URL_API}/api/type`,\r\n          param,null,user.accessToken).then((res)=>{\r\n          Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Thành công',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          }).then(()=>{\r\n            window.location.reload(false)\r\n          })\r\n        })\r\n      }\r\n    });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Mã loại\",\r\n      dataIndex: \"type_code\",\r\n      key: \"type_code\",\r\n    },\r\n    {\r\n      title: \"Tên loại\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <Button type=\"danger\" onClick={() => onDelete(record)}>\r\n            Xóa\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ marginLeft: 5 }}\r\n            onClick={() => onUpdate(record)}\r\n          >\r\n            Sửa\r\n          </Button>\r\n          <Modal\r\n            title=\"Sửa danh mục\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            okButtonProps={{\r\n              form: \"category-editor-form-update-type\",\r\n              key: \"submit\",\r\n              htmlType: \"submit\",\r\n            }}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              id=\"category-editor-form-update-type\"\r\n              form={form}\r\n            >\r\n              <Form.Item\r\n                label=\"Mã loại\"\r\n                name=\"type_code\"\r\n                rules={[{ required: true, message: \"Mời nhập mã loại!\" }]}\r\n              >\r\n                <Input disabled />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên loại\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Mời nhập tên loại!\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"190px\"}}>\r\n        <Col md={12}>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            form={formFilter}\r\n          >\r\n            <Form.Item\r\n              label=\"Tìm kiếm\"\r\n              name=\"name\"\r\n              rules={[\r\n                {message: \"Nhập tên để tìm!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            \r\n          </Form>\r\n        </Col>\r\n        <Col md={2} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={()=>formFilter.submit()} >\r\n            Tìm \r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table\r\n        bordered\r\n        columns={columns}\r\n        loading={loading}\r\n        dataSource={types}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TypeList;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\AreaList.jsx",["171","172"],"import React, { useEffect, useState } from \"react\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Table,\r\n  message,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n} from \"antd\";\r\n\r\nconst AreaList = () => {\r\n  const [areas, setAreas] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [formFilter] = Form.useForm();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    callApi(\r\n      \"get\",\r\n      `${process.env.REACT_APP_URL_API}/api/area`,null, null,\"\").then(\r\n        (res) => {\r\n      setLoading(false);\r\n      setAreas(res.data);\r\n    });\r\n  }, []);\r\n  const onUpdate = (record) => {\r\n    setVisible(true);\r\n    console.log(record);\r\n    form.setFieldsValue({\r\n      area_code: record.area_code,\r\n      name: record.name,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    //    setVisible(false)\r\n  };\r\n\r\n  const onFinish = (value) => {\r\n    callApi(\r\n      \"get\",\r\n      `${process.env.REACT_APP_URL_API}/api/area`,\r\n      null,\r\n      null,\r\n      \"\"\r\n    ).then((res) => {\r\n      setAreas(res.data);\r\n    });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    let param = {\r\n      status_delete: 1,\r\n    };\r\n    Swal.fire({\r\n      title: \"Bạn có chắc muốn xóa không?\",\r\n      text: \"Bạn không thể hoàn tác hành động này!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      window.location.reload(false);\r\n    });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Mã khu vực\",\r\n      dataIndex: \"area_code\",\r\n      key: \"area_code\",\r\n    },\r\n    {\r\n      title: \"Tên khu vực\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <Button type=\"danger\" onClick={() => onDelete(record)}>\r\n            Xóa\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ marginLeft: 5 }}\r\n            onClick={() => onUpdate(record)}\r\n          >\r\n            Sửa\r\n          </Button>\r\n          <Modal\r\n            title=\"Sửa khu vực\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            okButtonProps={{\r\n              form: \"category-editor-form-update-area\",\r\n              key: \"submit\",\r\n              htmlType: \"submit\",\r\n            }}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              //onFinish={onFinish}\r\n              id=\"category-editor-form-update-area\"\r\n              form={form}\r\n            >\r\n              <Form.Item\r\n                label=\"Mã khu vực\"\r\n                name=\"area_code\"\r\n                rules={[{ required: true, message: \"Mời nhập mã khu vực!\" }]}\r\n              >\r\n                <Input disabled />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên khu vực\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Mời nhập tên khu vực!\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"190px\"}}>\r\n        <Col md={12}>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            form={formFilter}\r\n          >\r\n            <Form.Item\r\n              label=\"Tìm kiếm\"\r\n              name=\"name\"\r\n              rules={[\r\n                {message: \"Nhập tên để tìm!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            \r\n          </Form>\r\n        </Col>\r\n        <Col md={2} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={()=>formFilter.submit()} >\r\n            Tìm \r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table\r\n        bordered\r\n        columns={columns}\r\n        loading={loading}\r\n        dataSource={areas}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AreaList;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\reducer\\index.js",[],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\components\\Footer\\index.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\containers\\ProductTypes.jsx",["190"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\util\\callerApi.js",[],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\areas\\components\\TableList.jsx",["191","192","193"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\product\\components\\ProductList.jsx",["194","195","196","197","198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport callApi from \"../../../util/callerApi\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  message,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Form,\r\n  Select,\r\n  Space\r\n} from \"antd\";\r\nconst { Option } = Select;\r\n\r\nconst props = {\r\n  name: \"file\",\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst ProductList = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n  const [types, setTypes] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [current, setCurrent] = useState(1);\r\n  const [initFilter,setInitFilter] = useState({page:1,perPage:10});\r\n  const [form] = Form.useForm();\r\n  const [formFilter] = Form.useForm();\r\n  useEffect(() => {\r\n    callApi(\"get\", `${process.env.REACT_APP_URL_API}/api/type`, null, null, \"\").then(\r\n      (res) => {\r\n        setTypes(res.data);\r\n      }\r\n    );\r\n    setLoading(true);\r\n    callApi(\r\n      \"get\",\r\n      `${process.env.REACT_APP_URL_API}/api/product`,\r\n      null,\r\n      { page: 1, perPage: 10 },\r\n      \"\"\r\n    ).then((res) => {\r\n      setLoading(false);\r\n      setProducts(res.data.data);\r\n      setTotal(res.data.total);\r\n    });\r\n  }, []);\r\n  const onUpdate = (record) => {\r\n    setVisible(true);\r\n    console.log(record);\r\n    form.setFieldsValue({\r\n      product_code: record.product_code,\r\n      name: record.name,\r\n      price: record.price,\r\n      description: record.description,\r\n      image: record.image,\r\n      types_type_code: record?.detail_type?.type_code,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    //    setVisible(false)\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"price\", values.price);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"types_type_code\",values.types_type_code);\r\n    axios.put('http://localhost:8080/api/product', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    }).then((res)=>{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Thành công',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      }).then(()=>{\r\n        window.location.reload(false)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'error',\r\n            title: 'Thất bại',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    });\r\n  };\r\n\r\n  const onDelete = (record) => {\r\n    let param = {\r\n      product_code: record.product_code,\r\n    };\r\n    Swal.fire({\r\n      title: \"Bạn có chắc muốn xóa không?\",\r\n      text: \"Bạn không thể hoàn tác hành động này!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      if(result.value){\r\n        callApi(\r\n          \"delete\",\r\n          `${process.env.REACT_APP_URL_API}/api/product`,\r\n          param,null,\"\").then((res)=>{\r\n            Swal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: 'Thành công',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            }).then(()=>{\r\n              window.location.reload(false)\r\n            })\r\n          })\r\n          .catch((err) => {\r\n              Swal.fire({\r\n                  position: 'top-end',\r\n                  icon: 'error',\r\n                  title: 'Thất bại',\r\n                  showConfirmButton: false,\r\n                  timer: 1500\r\n                })\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Mã sản phẩm\",\r\n      dataIndex: \"product_code\",\r\n      key: \"product_code\",\r\n    },\r\n    {\r\n      title: \"Tên sản phẩm\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Hình ảnh\",\r\n      dataIndex: \"image\",\r\n      key: \"image\",\r\n      render: (text, record) => (\r\n        <img\r\n          src={`${process.env.REACT_APP_URL_API}/image/${record.image}`}\r\n          width=\"50vh\"\r\n          height=\"50vh\"\r\n        ></img>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Giá\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (text, record) => (\r\n        <NumberFormat value={record.price} displayType={'text'} thousandSeparator={true} suffix={' VNĐ'} />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Loại\",\r\n      // dataIndex: \"types_type_code\",\r\n      key: \"types_type_code\",\r\n      render:(text, record) => (\r\n        <a>\r\n          {record?.detail_type?.name}\r\n        </a>\r\n      )},\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <Button type=\"danger\" onClick={() => onDelete(record)}>\r\n            Xóa\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ marginLeft: 5 }}\r\n            onClick={() => onUpdate(record)}\r\n          >\r\n            Sửa\r\n          </Button>\r\n          <Modal\r\n            title=\"Sửa món\"\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            okButtonProps={{\r\n              form: \"category-editor-form-update-product\",\r\n              key: \"submit\",\r\n              htmlType: \"submit\",\r\n            }}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              //onFinish={onFinish}\r\n              id=\"category-editor-form-update-product\"\r\n              form={form}\r\n            >\r\n              <Form.Item\r\n                label=\"Mã món\"\r\n                name=\"product_code\"\r\n                rules={[{ required: true, message: \"Mời nhập mã món!\" }]}\r\n              >\r\n                <Input disabled />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên món\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"Mời nhập tên món!\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Giá\"\r\n                name=\"price\"\r\n                rules={[{ required: true, message: \"Mời nhập giá!\" }]}\r\n              >\r\n                <Input thousandSeparator={true} suffix={' VNĐ'} />\r\n                </Form.Item>\r\n              <Form.Item label=\"Mô tả\" name=\"description\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Loại\"\r\n                name=\"types_type_code\"\r\n                rules={[{ required: true, message: \"Mời chọn loại!\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {types.map((type, index) => (\r\n                    <Option value={type.type_code} key={index}>\r\n                      {type.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Form>\r\n            <div>\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                onChange={(evt) => {\r\n                  evt.preventDefault();\r\n                  console.log(evt.target.files[0]);\r\n                  setFile(evt.target.files[0]);\r\n                }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n  ];\r\n  const onChangeSize = (page, pageSize) => {\r\n    setCurrent(parseInt(page.current));\r\n    setLoading(true);\r\n    callApi(\r\n      \"get\",\r\n      \"http://localhost:8080/api/product\",\r\n      null,\r\n      { page: parseInt(page.current), perPage: 10 },\r\n      \"\"\r\n    ).then((res) => {\r\n      setLoading(false);\r\n      setProducts(res.data.data);\r\n      setTotal(res.data.total);\r\n      setInitFilter({ page: parseInt(page.current), perPage: 10 })\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginLeft: \"190px\"}}>\r\n        <Col md={12}>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            form={formFilter}\r\n          >\r\n            <Form.Item\r\n              label=\"Tìm kiếm\"\r\n              name=\"name\"\r\n              rules={[\r\n                {message: \"Nhập tên để tìm!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            \r\n          </Form>\r\n        </Col>\r\n        <Col md={2} style={{ textAlign: \"right\" }}>\r\n          <Button type=\"primary\" onClick={()=>formFilter.submit()} >\r\n            Tìm \r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table\r\n        bordered\r\n        columns={columns}\r\n        loading={loading}\r\n        dataSource={products}\r\n        pagination={{\r\n          total: total,\r\n          defaultPageSize: 10,\r\n          position: [/*\"topRight\"*,*/ \"bottomRight\"],\r\n          current: current,\r\n          showQuickJumper: true,\r\n          showTotal: (total, range) =>\r\n            `${range[0]} đến ${range[1]} trên tổng số  ${total} sản phẩm`,\r\n        }}\r\n        onChange={onChangeSize}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\router\\PrivateRouter.js",["200"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\ManagerStaff\\Staffs.jsx",["201"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\inventory\\components\\Ingredients.jsx",["202","203"],"D:\\DATN\\templace-react-reduxsaga-master\\template-react-redux-saga\\src\\layout\\admin\\ManagerStaff\\StaffList.jsx",["204","205","206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":5,"column":50,"nodeType":"213","messageId":"214","endLine":5,"endColumn":54},{"ruleId":"211","severity":1,"message":"215","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":14},{"ruleId":"207","replacedBy":"216"},{"ruleId":"209","replacedBy":"217"},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"219","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"220","line":17,"column":7,"nodeType":"213","messageId":"214","endLine":17,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":37,"column":11,"nodeType":"223","endLine":40,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":36,"column":11,"nodeType":"223","endLine":41,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":49,"column":11,"nodeType":"223","endLine":54,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":62,"column":11,"nodeType":"223","endLine":67,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":32},{"ruleId":"211","severity":1,"message":"226","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":32},{"ruleId":"211","severity":1,"message":"227","line":1,"column":47,"nodeType":"213","messageId":"214","endLine":1,"endColumn":53},{"ruleId":"211","severity":1,"message":"227","line":1,"column":47,"nodeType":"213","messageId":"214","endLine":1,"endColumn":53},{"ruleId":"211","severity":1,"message":"228","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"227","line":1,"column":47,"nodeType":"213","messageId":"214","endLine":1,"endColumn":53},{"ruleId":"211","severity":1,"message":"229","line":7,"column":3,"nodeType":"213","messageId":"214","endLine":7,"endColumn":10},{"ruleId":"211","severity":1,"message":"230","line":61,"column":7,"nodeType":"213","messageId":"214","endLine":61,"endColumn":11},{"ruleId":"211","severity":1,"message":"231","line":79,"column":9,"nodeType":"213","messageId":"214","endLine":79,"endColumn":14},{"ruleId":"211","severity":1,"message":"229","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":10},{"ruleId":"211","severity":1,"message":"232","line":21,"column":10,"nodeType":"213","messageId":"214","endLine":21,"endColumn":20},{"ruleId":"211","severity":1,"message":"231","line":76,"column":9,"nodeType":"213","messageId":"214","endLine":76,"endColumn":14},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"219","line":5,"column":51,"nodeType":"213","messageId":"214","endLine":5,"endColumn":56},{"ruleId":"211","severity":1,"message":"233","line":6,"column":9,"nodeType":"213","messageId":"214","endLine":6,"endColumn":17},{"ruleId":"211","severity":1,"message":"234","line":7,"column":9,"nodeType":"213","messageId":"214","endLine":7,"endColumn":15},{"ruleId":"211","severity":1,"message":"235","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":15},{"ruleId":"211","severity":1,"message":"236","line":9,"column":17,"nodeType":"213","messageId":"214","endLine":9,"endColumn":25},{"ruleId":"211","severity":1,"message":"237","line":14,"column":9,"nodeType":"213","messageId":"214","endLine":14,"endColumn":15},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"238","line":9,"column":7,"nodeType":"213","messageId":"214","endLine":9,"endColumn":12},{"ruleId":"211","severity":1,"message":"239","line":1,"column":11,"nodeType":"213","messageId":"214","endLine":1,"endColumn":17},{"ruleId":"211","severity":1,"message":"229","line":1,"column":19,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"229","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":10},{"ruleId":"211","severity":1,"message":"229","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":10},{"ruleId":"211","severity":1,"message":"231","line":61,"column":9,"nodeType":"213","messageId":"214","endLine":61,"endColumn":14},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":16,"column":23,"nodeType":"223","endLine":16,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":30,"column":23,"nodeType":"223","endLine":30,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":35,"column":23,"nodeType":"223","endLine":35,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":40,"column":23,"nodeType":"223","endLine":40,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":45,"column":23,"nodeType":"223","endLine":45,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":50,"column":23,"nodeType":"223","endLine":50,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":118,"column":23,"nodeType":"223","endLine":118,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":121,"column":23,"nodeType":"223","endLine":121,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":124,"column":23,"nodeType":"223","endLine":124,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":127,"column":23,"nodeType":"223","endLine":127,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":130,"column":23,"nodeType":"223","endLine":130,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":133,"column":23,"nodeType":"223","endLine":133,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":136,"column":23,"nodeType":"223","endLine":136,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":139,"column":23,"nodeType":"223","endLine":139,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":210,"column":50,"nodeType":"244","endLine":210,"endColumn":65},{"ruleId":"240","severity":1,"message":"241","line":222,"column":23,"nodeType":"223","endLine":222,"endColumn":35},{"ruleId":"211","severity":1,"message":"226","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":32},{"ruleId":"211","severity":1,"message":"229","line":6,"column":5,"nodeType":"213","messageId":"214","endLine":6,"endColumn":12},{"ruleId":"211","severity":1,"message":"232","line":25,"column":10,"nodeType":"213","messageId":"214","endLine":25,"endColumn":20},{"ruleId":"211","severity":1,"message":"231","line":84,"column":9,"nodeType":"213","messageId":"214","endLine":84,"endColumn":14},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"245","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":8},{"ruleId":"211","severity":1,"message":"238","line":21,"column":7,"nodeType":"213","messageId":"214","endLine":21,"endColumn":12},{"ruleId":"211","severity":1,"message":"232","line":47,"column":10,"nodeType":"213","messageId":"214","endLine":47,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":186,"column":9,"nodeType":"223","endLine":190,"endColumn":10},{"ruleId":"240","severity":1,"message":"246","line":206,"column":9,"nodeType":"223","endLine":206,"endColumn":12},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"247","line":14,"column":9,"nodeType":"213","messageId":"214","endLine":14,"endColumn":21},{"ruleId":"211","severity":1,"message":"227","line":1,"column":47,"nodeType":"213","messageId":"214","endLine":1,"endColumn":53},{"ruleId":"211","severity":1,"message":"228","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"218","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"232","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"211","severity":1,"message":"248","line":12,"column":10,"nodeType":"213","messageId":"214","endLine":12,"endColumn":14},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.",["249"],["250"],"'PropTypes' is defined but never used.","'Image' is defined but never used.","'height' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'Select' is defined but never used.","'axios' is defined but never used.","'message' is defined but never used.","'user' is assigned a value but never used.","'param' is assigned a value but never used.","'initFilter' is assigned a value but never used.","'Redirect' is defined but never used.","'Footer' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'layout' is assigned a value but never used.","'props' is assigned a value but never used.","'Upload' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Space' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'renderGender' is assigned a value but never used.","'form' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]